<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="65921" started-at="2021-02-06T20:50:22Z" finished-at="2021-02-06T20:51:28Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="65921" started-at="2021-02-06T20:50:22Z" finished-at="2021-02-06T20:51:28Z">
      <class name="test.Test1">
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.Test1@490ab905]" name="setUp" is-config="true" duration-ms="13291" started-at="2021-02-06T20:50:22Z" finished-at="2021-02-06T20:50:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.Test1.test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="test1()[pri:1, instance:test.Test1@490ab905]" name="test1" duration-ms="5818" started-at="2021-02-06T20:50:36Z" finished-at="2021-02-06T20:50:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[the title contains not Test0 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: the title contains not Test0 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at test.Test1.test1(Test1.java:17)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test1@490ab905]" name="tearDown" is-config="true" duration-ms="123" started-at="2021-02-06T20:50:42Z" finished-at="2021-02-06T20:50:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.Test1@490ab905]" name="setUp" is-config="true" duration-ms="14328" started-at="2021-02-06T20:50:42Z" finished-at="2021-02-06T20:50:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.Test1.test2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="test2()[pri:2, instance:test.Test1@490ab905]" name="test2" duration-ms="4929" started-at="2021-02-06T20:50:56Z" finished-at="2021-02-06T20:51:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test1@490ab905]" name="tearDown" is-config="true" duration-ms="703" started-at="2021-02-06T20:51:01Z" finished-at="2021-02-06T20:51:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.Test1@490ab905]" name="setUp" is-config="true" duration-ms="6596" started-at="2021-02-06T20:51:02Z" finished-at="2021-02-06T20:51:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.Test1.test3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="test3()[pri:3, instance:test.Test1@490ab905]" name="test3" duration-ms="9045" started-at="2021-02-06T20:51:08Z" finished-at="2021-02-06T20:51:17Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[test-case skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: test-case skipped
at test.Test1.test3(Test1.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test1@490ab905]" name="tearDown" is-config="true" duration-ms="76" started-at="2021-02-06T20:51:17Z" finished-at="2021-02-06T20:51:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.Test1@490ab905]" name="setUp" is-config="true" duration-ms="5976" started-at="2021-02-06T20:51:17Z" finished-at="2021-02-06T20:51:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.Test1.test4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="test4()[pri:4, instance:test.Test1@490ab905]" name="test4" duration-ms="4921" started-at="2021-02-06T20:51:23Z" finished-at="2021-02-06T20:51:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test1@490ab905]" name="tearDown" is-config="true" duration-ms="66" started-at="2021-02-06T20:51:28Z" finished-at="2021-02-06T20:51:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.Test1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
